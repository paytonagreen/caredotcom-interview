<%= stylesheet_link_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %>

<header>
  <h1 class="fake-logo">
    Events Page
  </h1>
</header>

<body>
    <h2 class="page-headline">Our Best Events</h2>

    <div class="cardContainer" id="eventsDiv"></div>
</body>

<script async>
  displayEvents();

  async function displayEvents() {
    const eventsDiv = document.getElementById("eventsDiv")
    const events = await fetch('https://api.getgalore-staging.com/v1/events', {
      headers: {
        'Api-Key': 'y7LfciquwtdT4gCQgnNMzQxx',
      },
    })
    .then((res) => res.json())

    renderEvents(events, 'activities');
    renderEvents(events, 'series');
  }

  function renderEvents(events, category) {
    events[category].forEach((event) => {
      const location = event.online ? 'Online' : getLocation(event, category);
      const formattedDate = formatDate(event);
      const formattedPrice = parseInt(event.price).toFixed(2)


      eventsDiv.insertAdjacentHTML('beforeend',`
          <div class="card">
            <h3>${event.title}</h3>
              <section>
                <div class="content">
                  ${category !== 'series' ? `<p>When: ${formattedDate}</p>` : ''}
                  <p>Location: ${location}</p>
                  <p>Price: $${formattedPrice}</p>
                  <a class="link-button" href="${event.web_url}">
                    <button>Book Now!</button>
                  </a>
                </div>
                <img src="${event.photos[0].small_url}" alt="${event.photos[0].caption}"} />
              </section>
          </div>
      `)
    })
    }

  function getLocation(event, category) {
    let location

    const rawLocation = event[category === 'series' ? 'location_series' : 'activity_location'].location;

    if (category === 'series') {
      location = `${rawLocation.city}, ${rawLocation.state}`
    } else {
      location = `${rawLocation.city}, ${rawLocation.state}`        
    }

    return location;
  }

  function formatDate(event) {
    const date = new Date(event.start_time_iso_string);

    console.log(event);

    const month = date.getMonth() + 1;
    const day = date.getDate();
    const year = date.getFullYear();

    const hour = date.getHours() > 12 ? date.getHours() - 12 : date.getHours();
    const minutes = date.getMinutes() ? date.getMinutes() : '00';
    const amPm = date.getHours() >= 12 ? 'PM' : 'AM';

    return`${month}/${day}/${year}, ${hour}:${minutes}${amPm}`;
  }

</script>